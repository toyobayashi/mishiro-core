name: Build

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    # - uses: mymindstorm/setup-emsdk@v10
    #   with:
    #     version: '2.0.12'
    #     no-cache: true
    #     # actions-cache-folder: 'emsdk-cache'
    - uses: actions/setup-node@v2
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # - if: ${{matrix.os == 'macos-latest'}}
    #   run: brew install make

    - name: Windows build
      if: ${{ matrix.os == 'windows-latest' }}
      shell: cmd
      run: |
        call .\script\build.bat

    - name: Linux build
      if: ${{ matrix.os == 'ubuntu-latest' }}
      shell: bash
      run: |
        chmod +x ./script/build.sh
        ./script/build.sh

    - name: macOS build
      if: ${{ contains(matrix.os, 'macos') }}
      shell: bash
      run: |
        chmod +x ./script/build.sh
        ./script/build.sh
    
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ./download
        key: ${{ runner.os }}-test-download

    - name: Test
      run: npm test

    # - name: Before Deploy
    #   if: ${{ startsWith(github.event.ref, 'refs/tags') }}
    #   run: node ./script/before-deploy.js

    - name: Publish
      if: ${{ startsWith(github.event.ref, 'refs/tags') && matrix.os == 'ubuntu-latest' }}
      run: npm publish

    # - name: Create release
    #   if: ${{ startsWith(github.event.ref, 'refs/tags') }}
    #   uses: toyobayashi/upload-release-assets@v3.0.0
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.event.after }}
    #     release_name: ${{ github.event.after }}
    #     draft: true
    #     prerelease: false
    #     assets: ./release/*.node
